package fr.utbm.ia54.simulationorca.sarlagent

import io.sarl.core.Initialize
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle
import java.util.List
import java.util.ArrayList
import fr.utbm.ia54.simulationorca.framework.Position
import io.sarl.lang.core.Address

agent Kernel {
	
	uses DefaultContextInteractions, Lifecycle
	
	on Initialize {
		
		var listPositionInitPedestrian : List<Position> = new ArrayList<Position>()
		var listPositionFinalPedestrian : List<Position> = new ArrayList<Position>()
		//TODO lecture en xml
		listPositionInitPedestrian.add(new Position(1,1))
		listPositionFinalPedestrian.add(new Position(5,5))
		
		var listPedestrianAddresses = spawnPedestrians(listPositionInitPedestrian, listPositionFinalPedestrian )
		spawn(Environment, #[listPedestrianAddresses, listPositionInitPedestrian])
		killMe	
	}
	
	def spawnPedestrians(listInitialPedestrianPositions : List<Position>, listFinalPedestrianPositions : List<Position>) : List<Address> {
		var listPedestrianAddresses : List<Address> = new ArrayList<Address>()
		
		for (var i=0; i<listInitialPedestrianPositions.size(); i++) {
			var params = #[listInitialPedestrianPositions.get(i), listFinalPedestrianPositions.get(i)]
			var id = spawn(Pedestrian, params)
			listPedestrianAddresses.add(defaultSpace.getAddress(id))
		}
		
		return listPedestrianAddresses
	}
}