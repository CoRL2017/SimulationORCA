package fr.utbm.ia54.simulationorca.sarlagent

import io.sarl.core.Initialize
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Lifecycle
import java.util.List
import java.util.ArrayList
import fr.utbm.ia54.simulationorca.framework.Position
import io.sarl.lang.core.Address
import fr.utbm.ia54.simulationorca.framework.XMLParser
import fr.utbm.ia54.simulationorca.gui.SimulationFrame
import java.util.HashSet

agent Kernel {
	
	uses DefaultContextInteractions, Lifecycle
	
	on Initialize {
		var xmlParser : XMLParser = new XMLParser("./environment_structure.xml")
			
		var listPedestrianAddresses = spawnPedestrians(xmlParser.listInitialPositionPedestrians, xmlParser.listFinalPositionPedestrians )
		var listener : SimulationFrame = new SimulationFrame(new HashSet(xmlParser.listObstacles))
		spawn(Environment, #[listPedestrianAddresses, xmlParser.listInitialPositionPedestrians, xmlParser.listObstacles,listener])
		
		killMe	
	}
	
	def spawnPedestrians(listInitialPedestrianPositions : List<Position>, listFinalPedestrianPositions : List<Position>) : List<Address> {
		var listPedestrianAddresses : List<Address> = new ArrayList<Address>()
		
		for (var i=0; i<listInitialPedestrianPositions.size(); i++) {
			var params = #[listInitialPedestrianPositions.get(i), listFinalPedestrianPositions.get(i)]
			var id = spawn(Pedestrian, params)
			listPedestrianAddresses.add(defaultSpace.getAddress(id))
		}
		
		return listPedestrianAddresses
	}
}